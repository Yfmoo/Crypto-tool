# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\LearnPyhon\pythonPractice\Python_class\final_homework\UI\RSA.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from Crypto.Cipher import AES, DES3, DES
from Crypto.Random import get_random_bytes
from base64 import b64encode, b64decode
import hashlib

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1080, 598)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout_5.addWidget(self.label)
        self.plainTextEdit_7 = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(88, 88, 88);")
        self.plainTextEdit_7.setFrameShape(QtWidgets.QFrame.Box)
        self.plainTextEdit_7.setObjectName("plainTextEdit_7")
        self.horizontalLayout_5.addWidget(self.plainTextEdit_7)
        self.horizontalLayout_5.setStretch(0, 1)
        self.horizontalLayout_5.setStretch(1, 9)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_6.addWidget(self.label_2)
        self.plainTextEdit_8 = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(88, 88, 88);")
        self.plainTextEdit_8.setFrameShape(QtWidgets.QFrame.Box)
        self.plainTextEdit_8.setObjectName("plainTextEdit_8")
        self.horizontalLayout_6.addWidget(self.plainTextEdit_8)
        self.horizontalLayout_6.setStretch(0, 1)
        self.horizontalLayout_6.setStretch(1, 9)
        self.verticalLayout_5.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_7.addWidget(self.label_3)
        self.plainTextEdit_9 = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(88, 88, 88);")
        self.plainTextEdit_9.setFrameShape(QtWidgets.QFrame.Box)
        self.plainTextEdit_9.setObjectName("plainTextEdit_9")
        self.horizontalLayout_7.addWidget(self.plainTextEdit_9)
        self.horizontalLayout_7.setStretch(0, 1)
        self.horizontalLayout_7.setStretch(1, 9)
        self.verticalLayout_5.addLayout(self.horizontalLayout_7)
        self.verticalLayout_6.addLayout(self.verticalLayout_5)
        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pushButton_3.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.pushButton_3.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(255, 0, 0);")
        self.pushButton_3.setIconSize(QtCore.QSize(80, 20))
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout_6.addWidget(self.pushButton_3)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_8.addWidget(self.label_4)
        self.plainTextEdit_10 = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(88, 88, 88);")
        self.plainTextEdit_10.setFrameShape(QtWidgets.QFrame.Box)
        self.plainTextEdit_10.setObjectName("plainTextEdit_10")
        self.horizontalLayout_8.addWidget(self.plainTextEdit_10)
        self.horizontalLayout_8.setStretch(0, 1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setMaximumSize(QtCore.QSize(20, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_9.addWidget(self.label_5)
        self.plainTextEdit_11 = QtWidgets.QPlainTextEdit(self.groupBox)
        self.plainTextEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.plainTextEdit_11.setFrameShape(QtWidgets.QFrame.Box)
        self.plainTextEdit_11.setPlaceholderText("")
        self.plainTextEdit_11.setObjectName("plainTextEdit_11")
        self.horizontalLayout_9.addWidget(self.plainTextEdit_11)
        self.horizontalLayout_9.setStretch(0, 1)
        self.verticalLayout_2.addLayout(self.horizontalLayout_9)
        self.verticalLayout_6.addLayout(self.verticalLayout_2)
        self.verticalLayout.addWidget(self.groupBox)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        
        # Connect the decrypt button to the function
        self.pushButton_3.clicked.connect(self.decrypt_button_clicked)

        # Store the initial content for restoring
        self.initial_content = {
            "plainTextEdit_7": self.plainTextEdit_7.toPlainText(),
            "plainTextEdit_8": self.plainTextEdit_8.toPlainText(),
            "plainTextEdit_9": self.plainTextEdit_9.toPlainText(),
            "plainTextEdit_10": self.plainTextEdit_10.toPlainText(),
            "plainTextEdit_11": self.plainTextEdit_11.toPlainText(),
        }

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.groupBox.setTitle(_translate("Form", "RSA"))
        self.label.setText(_translate("Form", "P"))
        self.plainTextEdit_7.setPlaceholderText(_translate("Form", "请输入大素数P"))
        self.label_2.setText(_translate("Form", "Q"))
        self.plainTextEdit_8.setPlaceholderText(_translate("Form", "请输入大素数Q"))
        self.label_3.setText(_translate("Form", "E"))
        self.plainTextEdit_9.setPlaceholderText(_translate("Form", "请输入E"))
        self.pushButton_3.setText(_translate("Form", "解密"))
        self.label_4.setText(_translate("Form", "n"))
        self.plainTextEdit_10.setPlaceholderText(_translate("Form", "欧拉函数"))
        self.label_5.setText(_translate("Form", "D"))

    def decrypt_button_clicked(self):
        try:
            p = int(self.plainTextEdit_7.toPlainText())
            q = int(self.plainTextEdit_8.toPlainText())
            e = int(self.plainTextEdit_9.toPlainText())
            
            n, d = calculate_rsa_keys(p, q, e)
            
            self.plainTextEdit_10.setPlainText(str(n))
            self.plainTextEdit_11.setPlainText(str(d))
        except Exception as ex:
            self.plainTextEdit_10.setPlainText("Error")
            self.plainTextEdit_11.setPlainText("Error")
            print(f"An error occurred: {ex}")

    def restore_initial_content(self):
        self.plainTextEdit_7.setPlainText(self.initial_content["plainTextEdit_7"])
        self.plainTextEdit_8.setPlainText(self.initial_content["plainTextEdit_8"])
        self.plainTextEdit_9.setPlainText(self.initial_content["plainTextEdit_9"])
        self.plainTextEdit_10.setPlainText(self.initial_content["plainTextEdit_10"])
        self.plainTextEdit_11.setPlainText(self.initial_content["plainTextEdit_11"])

# Add the RSA calculation functions here

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def extended_gcd(a, b):
    if a == 0:
        return b, 0, 1
    gcd, x1, y1 = extended_gcd(b % a, a)
    x = y1 - (b // a) * x1
    y = x1
    return gcd, x, y

def mod_inverse(e, phi):
    gcd, x, y = extended_gcd(e, phi)
    if gcd != 1:
        raise Exception('The modular inverse does not exist')
    else:
        return x % phi

def calculate_rsa_keys(p, q, e):
    n = p * q
    phi = (p - 1) * (q - 1)
    d = mod_inverse(e, phi)
    return n, d

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
